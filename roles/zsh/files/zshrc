#!/usr/bin/env zsh
# zmodload zsh/zprof

limit coredumpsize 0

export XDG_DATA_HOME=${HOME}/.local/share
export XDG_CONFIG_HOME=${HOME}/.config
export XDG_CACHE_HOME=$HOME/.cache
export ZPLUG_HOME=${XDG_DATA_HOME}/zplug
export ZSH=${HOME}/.config/dotfiles
export ZPLUG_LOADFILE=${ZSH}/roles/zsh/zplug.zsh

# Load plugins.
if [[ -f ${XDG_DATA_HOME}/zplug/init.zsh ]]; then
    source ${ZPLUG_HOME}/init.zsh
    zplug load
else
    echo "Installing zplug"
    curl -sL --proto-redir -all,https https://raw.githubusercontent.com/zplug/installer/master/installer.zsh | zsh
    source ${ZPLUG_HOME}/init.zsh
    zplug update
fi

ZSH_AUTOSUGGEST_MANUAL_REBIND=true
ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=minimal-magic-enter
ZSH_AUTOSUGGEST_CLEAR_WIDGETS=("${(@)ZSH_AUTOSUGGEST_CLEAR_WIDGETS:#(up|down)-line-or-history}")
ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(history-substring-search-up history-substring-search-down)

# https://gist.github.com/QinMing/364774610afc0e06cc223b467abe83c0
lazy_load() {
    # $1: space separated list of alias to release after the first load
    # $2: file to source
    # $3: name of the command to run after it's loaded
    # $4+: argv to be passed to $3
    printf '\e[1;90m%-6s\e[m\n' "Lazy loading $1 ..." >&2

    # $1.split(' ') using the s flag. In bash, this can be simply ($1) #http://unix.stackexchange.com/questions/28854/list-elements-with-spaces-in-zsh
    # Single line won't work: local names=("${(@s: :)${1}}"). Due to http://stackoverflow.com/questions/14917501/local-arrays-in-zsh   (zsh 5.0.8 (x86_64-apple-darwin15.0))
    local -a names
    if [[ -n "$ZSH_VERSION" ]]; then
        names=("${(@s: :)${1}}")
    else
        names=($1)
    fi
    unalias "${names[@]}"
    . $2
    shift 2
    $*
}

function group_lazy_load {
    local script
    script=$1
    shift 1
    for cmd in "$@"; do
        alias $cmd="lazy_load \"$*\" $script $cmd"
    done
}

#all of our zsh files
typeset -U config_files
config_files=(${ZSH}/**/*.zsh)

# load all env files
for file in ${(M)config_files:#*/_env.zsh}
do
  source $file
done

#load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path, final, and completion files
for file in ${${${${${${config_files:#*/path.zsh}:#*/_env.zsh}:#*/plug.zsh}:#*/completion.zsh}:#*/final.zsh}:#*/zplug.zsh}
do
  source $file
done

autoload -Uz compinit
mkdir -p $XDG_CACHE_HOME/zsh
if [[ -n $XDG_CACHE_HOME/zsh/zcompdump(#qN.mh+24) ]]; then
    compinit -D $XDG_CACHE_HOME/zsh/zcompdump(#qN.mh+24);
else
    compinit -D $XDG_CACHE_HOME/zsh/zcompdump(#qN.mh+24) -C;
fi;
autoload -Uz colors && colors
autoload -Uz add-zsh-hock
autoload -Uz is-at-latest

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

# Load final.zsh to end loading
for file in ${(M)config_files:#*/final.zsh}
do
  source $file
done

unset config_files
unset -f group_lazy_load

if (( $+commands[direnv] )); then _evalcache direnv hook zsh; fi
_evalcache dircolors ${ZSH}/roles/zsh/files/dircolors
_evalcache starship init zsh
# zprof
# zprof
